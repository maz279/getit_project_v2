apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: getit-production
  labels:
    app: user-service
    version: v1.0.0
    tier: backend
    platform: getit-bangladesh
    component: core-service
    domain: authentication
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "GetIt Bangladesh User Service - Authentication, profiles, and user management"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: user-service
      tier: backend
  template:
    metadata:
      labels:
        app: user-service
        version: v1.0.0
        tier: backend
        platform: getit-bangladesh
        component: core-service
        domain: authentication
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9091"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: user-service-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: user-service
        image: getit-bangladesh/user-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9091
          protocol: TCP
        - name: health
          containerPort: 8082
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: METRICS_PORT
          value: "9091"
        - name: HEALTH_CHECK_PORT
          value: "8082"
        - name: SERVICE_NAME
          value: "user-service"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: postgresql-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: cache-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: jwt-secret
        - name: JWT_EXPIRES_IN
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: jwt-expires-in
        - name: PASSWORD_SALT_ROUNDS
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: password-salt-rounds
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: session-secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: encryption-key
        # Bangladesh-specific configuration
        - name: BANGLADESH_PHONE_VALIDATION
          value: "true"
        - name: BANGLADESH_NID_VALIDATION
          value: "true"
        - name: SUPPORTED_LANGUAGES
          value: "bn,en,hi,ar"
        - name: DEFAULT_TIMEZONE
          value: "Asia/Dhaka"
        - name: DEFAULT_CURRENCY
          value: "BDT"
        # SMS and Email service configuration
        - name: SMS_PROVIDER
          value: "ssl-wireless"
        - name: EMAIL_PROVIDER
          value: "sendgrid"
        - name: SMS_API_KEY
          valueFrom:
            secretKeyRef:
              name: communication-secrets
              key: sms-api-key
        - name: EMAIL_API_KEY
          valueFrom:
            secretKeyRef:
              name: communication-secrets
              key: email-api-key
        # OTP configuration
        - name: OTP_EXPIRES_IN
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: otp-expires-in
        - name: OTP_LENGTH
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: otp-length
        # Rate limiting
        - name: RATE_LIMIT_WINDOW_MS
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: rate-limit-window-ms
        - name: RATE_LIMIT_MAX_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: rate-limit-max-requests
        # External service URLs
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service:3007"
        - name: ANALYTICS_SERVICE_URL
          value: "http://analytics-service:3009"
        - name: LOCALIZATION_SERVICE_URL
          value: "http://localization-service:3012"
        resources:
          requests:
            cpu: 150m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: health
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: health
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: user-service-config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: user-service-config
        configMap:
          name: user-service-config
      - name: logs
        emptyDir:
          sizeLimit: 500Mi
      - name: temp
        emptyDir:
          sizeLimit: 200Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - user-service
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: getit-production
  labels:
    app: user-service
    tier: backend
    platform: getit-bangladesh
    domain: authentication
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
spec:
  type: ClusterIP
  selector:
    app: user-service
    tier: backend
  ports:
  - name: http
    port: 3000
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9091
    targetPort: metrics
    protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: user-service-service-account
  namespace: getit-production
  labels:
    app: user-service
    platform: getit-bangladesh
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-service-hpa
  namespace: getit-production
  labels:
    app: user-service
    platform: getit-bangladesh
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-service
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 30
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60