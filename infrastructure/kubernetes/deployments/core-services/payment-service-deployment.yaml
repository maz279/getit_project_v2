apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: getit-production
  labels:
    app: payment-service
    version: v1.0.0
    tier: backend
    platform: getit-bangladesh
    component: core-service
    domain: payments
    compliance: "pci-dss,bangladesh-bank"
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "GetIt Bangladesh Payment Service - bKash, Nagad, Rocket, International payments"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: payment-service
      tier: backend
  template:
    metadata:
      labels:
        app: payment-service
        version: v1.0.0
        tier: backend
        platform: getit-bangladesh
        component: core-service
        domain: payments
        compliance: "pci-dss,bangladesh-bank"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9094"
        prometheus.io/path: "/metrics"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "payment-service"
        vault.hashicorp.com/agent-inject-secret-bkash: "secret/data/payment/bkash"
        vault.hashicorp.com/agent-inject-secret-nagad: "secret/data/payment/nagad"
        vault.hashicorp.com/agent-inject-secret-rocket: "secret/data/payment/rocket"
    spec:
      serviceAccountName: payment-service-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1004
        fsGroup: 1004
      containers:
      - name: payment-service
        image: getit-bangladesh/payment-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3004
          protocol: TCP
        - name: metrics
          containerPort: 9094
          protocol: TCP
        - name: health
          containerPort: 8084
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3004"
        - name: METRICS_PORT
          value: "9094"
        - name: HEALTH_CHECK_PORT
          value: "8084"
        - name: SERVICE_NAME
          value: "payment-service"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: postgresql-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: cache-secrets
              key: redis-url
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: payment-secrets
              key: encryption-key
        # Bangladesh Mobile Banking Configuration
        - name: BKASH_ENABLED
          value: "true"
        - name: BKASH_APP_KEY
          valueFrom:
            secretKeyRef:
              name: bkash-secrets
              key: app-key
        - name: BKASH_APP_SECRET
          valueFrom:
            secretKeyRef:
              name: bkash-secrets
              key: app-secret
        - name: BKASH_USERNAME
          valueFrom:
            secretKeyRef:
              name: bkash-secrets
              key: username
        - name: BKASH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bkash-secrets
              key: password
        - name: BKASH_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: bkash-base-url
        - name: NAGAD_ENABLED
          value: "true"
        - name: NAGAD_MERCHANT_ID
          valueFrom:
            secretKeyRef:
              name: nagad-secrets
              key: merchant-id
        - name: NAGAD_MERCHANT_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: nagad-secrets
              key: merchant-private-key
        - name: NAGAD_PGP_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              name: nagad-secrets
              key: pgp-public-key
        - name: NAGAD_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: nagad-base-url
        - name: ROCKET_ENABLED
          value: "true"
        - name: ROCKET_MERCHANT_ID
          valueFrom:
            secretKeyRef:
              name: rocket-secrets
              key: merchant-id
        - name: ROCKET_MERCHANT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rocket-secrets
              key: merchant-password
        - name: ROCKET_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: rocket-base-url
        # International Payment Gateways
        - name: STRIPE_ENABLED
          value: "true"
        - name: STRIPE_PUBLISHABLE_KEY
          valueFrom:
            secretKeyRef:
              name: stripe-secrets
              key: publishable-key
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: stripe-secrets
              key: secret-key
        - name: STRIPE_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: stripe-secrets
              key: webhook-secret
        - name: PAYPAL_ENABLED
          value: "true"
        - name: PAYPAL_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: paypal-secrets
              key: client-id
        - name: PAYPAL_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: paypal-secrets
              key: client-secret
        # Payment Configuration
        - name: DEFAULT_CURRENCY
          value: "BDT"
        - name: SUPPORTED_CURRENCIES
          value: "BDT,USD,EUR,GBP"
        - name: PAYMENT_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: payment-timeout
        - name: MAX_PAYMENT_AMOUNT
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: max-payment-amount
        - name: MIN_PAYMENT_AMOUNT
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: min-payment-amount
        # External service URLs
        - name: ORDER_SERVICE_URL
          value: "http://order-service:3003"
        - name: USER_SERVICE_URL
          value: "http://user-service:3000"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service:3007"
        - name: ANALYTICS_SERVICE_URL
          value: "http://analytics-service:3009"
        - name: FINANCE_SERVICE_URL
          value: "http://finance-service:3011"
        # Compliance and Security
        - name: PCI_COMPLIANCE_ENABLED
          value: "true"
        - name: FRAUD_DETECTION_ENABLED
          value: "true"
        - name: PAYMENT_AUDIT_ENABLED
          value: "true"
        - name: BANGLADESH_BANK_COMPLIANCE
          value: "true"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: health
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: health
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: payment-service-config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /tmp
        - name: vault-secrets
          mountPath: /vault/secrets
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: payment-service-config
        configMap:
          name: payment-service-config
      - name: logs
        emptyDir:
          sizeLimit: 1Gi
      - name: temp
        emptyDir:
          sizeLimit: 200Mi
      - name: vault-secrets
        emptyDir:
          medium: Memory
          sizeLimit: 10Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - payment-service
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "high-security"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: getit-production
  labels:
    app: payment-service
    tier: backend
    platform: getit-bangladesh
    domain: payments
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9094"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  type: ClusterIP
  selector:
    app: payment-service
    tier: backend
  ports:
  - name: http
    port: 3004
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9094
    targetPort: metrics
    protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: payment-service-service-account
  namespace: getit-production
  labels:
    app: payment-service
    platform: getit-bangladesh
  annotations:
    vault.hashicorp.com/role: "payment-service"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: payment-service-hpa
  namespace: getit-production
  labels:
    app: payment-service
    platform: getit-bangladesh
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: payment-service
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 3
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: payment-service-pdb
  namespace: getit-production
  labels:
    app: payment-service
    platform: getit-bangladesh
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: payment-service
      tier: backend