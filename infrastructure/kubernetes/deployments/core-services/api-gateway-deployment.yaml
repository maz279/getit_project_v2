apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: getit-production
  labels:
    app: api-gateway
    version: v1.0.0
    tier: api-gateway
    platform: getit-bangladesh
    component: core-service
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "GetIt Bangladesh API Gateway - Central traffic routing for all microservices"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: api-gateway
      tier: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        version: v1.0.0
        tier: api-gateway
        platform: getit-bangladesh
        component: core-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: api-gateway-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api-gateway
        image: getit-bangladesh/api-gateway:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: METRICS_PORT
          value: "9090"
        - name: HEALTH_CHECK_PORT
          value: "8081"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: postgresql-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: cache-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: jwt-secret
        - name: API_RATE_LIMIT
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: rate-limit
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: cors-origins
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: log-level
        # Bangladesh-specific environment variables
        - name: BANGLADESH_TIMEZONE
          value: "Asia/Dhaka"
        - name: SUPPORTED_LANGUAGES
          value: "bn,en,hi,ar"
        - name: PAYMENT_GATEWAYS
          value: "bkash,nagad,rocket,stripe,paypal"
        - name: SHIPPING_PARTNERS
          value: "pathao,paperfly,sundarban,redx,ecourier"
        # Microservice endpoints
        - name: USER_SERVICE_URL
          value: "http://user-service:3000"
        - name: VENDOR_SERVICE_URL
          value: "http://vendor-service:3001"
        - name: PRODUCT_SERVICE_URL
          value: "http://product-service:3002"
        - name: ORDER_SERVICE_URL
          value: "http://order-service:3003"
        - name: PAYMENT_SERVICE_URL
          value: "http://payment-service:3004"
        - name: INVENTORY_SERVICE_URL
          value: "http://inventory-service:3005"
        - name: SHIPPING_SERVICE_URL
          value: "http://shipping-service:3006"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service:3007"
        - name: SEARCH_SERVICE_URL
          value: "http://search-service:3008"
        - name: ANALYTICS_SERVICE_URL
          value: "http://analytics-service:3009"
        - name: ML_SERVICE_URL
          value: "http://ml-service:3010"
        - name: FINANCE_SERVICE_URL
          value: "http://finance-service:3011"
        - name: LOCALIZATION_SERVICE_URL
          value: "http://localization-service:3012"
        - name: REVIEW_SERVICE_URL
          value: "http://review-service:3013"
        - name: SUPPORT_SERVICE_URL
          value: "http://support-service:3014"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: health
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: health
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: api-gateway-config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /tmp
      volumes:
      - name: api-gateway-config
        configMap:
          name: api-gateway-config
      - name: logs
        emptyDir:
          sizeLimit: 1Gi
      - name: temp
        emptyDir:
          sizeLimit: 500Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - api-gateway
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "high-traffic"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: getit-production
  labels:
    app: api-gateway
    tier: api-gateway
    platform: getit-bangladesh
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  type: LoadBalancer
  selector:
    app: api-gateway
    tier: api-gateway
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway-service-account
  namespace: getit-production
  labels:
    app: api-gateway
    platform: getit-bangladesh
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: getit-production
  labels:
    app: api-gateway
    platform: getit-bangladesh
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60