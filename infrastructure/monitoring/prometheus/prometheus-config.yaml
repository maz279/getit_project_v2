apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: getit-monitoring
  labels:
    app: prometheus
    component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'getit-platform'
        environment: 'production'

    rule_files:
      - "*.yml"
      - "*.yaml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # GetIt Platform Core Services
      - job_name: 'user-service'
        scrape_interval: 10s
        static_configs:
          - targets: ['user-service:3001']
        metrics_path: '/api/v1/users/metrics'
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: user-service:3001

      - job_name: 'product-service'
        scrape_interval: 10s
        static_configs:
          - targets: ['product-service:3002']
        metrics_path: '/api/v1/products/metrics'
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: product-service:3002

      - job_name: 'payment-service'
        scrape_interval: 5s  # More frequent for critical payment monitoring
        static_configs:
          - targets: ['payment-service:3003']
        metrics_path: '/api/v1/payments/metrics'
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: payment-service:3003
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: 'payment_.*'
            target_label: service_tier
            replacement: 'critical'

      - job_name: 'order-service'
        scrape_interval: 10s
        static_configs:
          - targets: ['order-service:3004']
        metrics_path: '/api/v1/orders/metrics'

      - job_name: 'vendor-service'
        scrape_interval: 15s
        static_configs:
          - targets: ['vendor-service:3005']
        metrics_path: '/api/v1/vendors/metrics'

      - job_name: 'inventory-service'
        scrape_interval: 10s
        static_configs:
          - targets: ['inventory-service:3006']
        metrics_path: '/api/v1/inventory/metrics'

      - job_name: 'notification-service'
        scrape_interval: 15s
        static_configs:
          - targets: ['notification-service:3007']
        metrics_path: '/api/v1/notifications/metrics'

      - job_name: 'analytics-service'
        scrape_interval: 30s
        static_configs:
          - targets: ['analytics-service:3008']
        metrics_path: '/api/v1/analytics/metrics'

      - job_name: 'ml-service'
        scrape_interval: 30s
        static_configs:
          - targets: ['ml-service:3009']
        metrics_path: '/api/v1/ml/metrics'

      - job_name: 'finance-service'
        scrape_interval: 10s
        static_configs:
          - targets: ['finance-service:3010']
        metrics_path: '/api/v1/finance/metrics'

      - job_name: 'search-service'
        scrape_interval: 15s
        static_configs:
          - targets: ['search-service:3011']
        metrics_path: '/api/v1/search/metrics'

      - job_name: 'localization-service'
        scrape_interval: 30s
        static_configs:
          - targets: ['localization-service:3012']
        metrics_path: '/api/v1/localization/metrics'

      - job_name: 'shipping-service'
        scrape_interval: 10s
        static_configs:
          - targets: ['shipping-service:3013']
        metrics_path: '/api/v1/shipping/metrics'
        relabel_configs:
          - source_labels: [__address__]
            target_label: bangladesh_courier_service
            replacement: 'true'

      # Bangladesh Payment Gateway Monitoring
      - job_name: 'bkash-gateway-monitoring'
        scrape_interval: 30s
        static_configs:
          - targets: ['payment-service:3003']
        metrics_path: '/api/v1/payments/bkash/metrics'
        relabel_configs:
          - target_label: payment_gateway
            replacement: 'bkash'
          - target_label: country
            replacement: 'bangladesh'

      - job_name: 'nagad-gateway-monitoring'
        scrape_interval: 30s
        static_configs:
          - targets: ['payment-service:3003']
        metrics_path: '/api/v1/payments/nagad/metrics'
        relabel_configs:
          - target_label: payment_gateway
            replacement: 'nagad'
          - target_label: country
            replacement: 'bangladesh'

      - job_name: 'rocket-gateway-monitoring'
        scrape_interval: 30s
        static_configs:
          - targets: ['payment-service:3003']
        metrics_path: '/api/v1/payments/rocket/metrics'
        relabel_configs:
          - target_label: payment_gateway
            replacement: 'rocket'
          - target_label: country
            replacement: 'bangladesh'

      # Bangladesh Shipping Partner Monitoring
      - job_name: 'pathao-courier-monitoring'
        scrape_interval: 60s
        static_configs:
          - targets: ['shipping-service:3013']
        metrics_path: '/api/v1/shipping/pathao/metrics'
        relabel_configs:
          - target_label: courier_partner
            replacement: 'pathao'
          - target_label: country
            replacement: 'bangladesh'

      - job_name: 'paperfly-courier-monitoring'
        scrape_interval: 60s
        static_configs:
          - targets: ['shipping-service:3013']
        metrics_path: '/api/v1/shipping/paperfly/metrics'
        relabel_configs:
          - target_label: courier_partner
            replacement: 'paperfly'
          - target_label: country
            replacement: 'bangladesh'

      # Infrastructure Monitoring
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - getit-development
                - getit-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # Database Monitoring
      - job_name: 'postgresql-exporter'
        static_configs:
          - targets: ['postgres-exporter:9187']
        scrape_interval: 15s

      - job_name: 'redis-exporter'
        static_configs:
          - targets: ['redis-exporter:9121']
        scrape_interval: 15s

      # Application Performance Monitoring
      - job_name: 'nginx-exporter'
        static_configs:
          - targets: ['nginx-exporter:9113']
        scrape_interval: 15s

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: getit-monitoring
  labels:
    app: prometheus
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        component: monitoring
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=30d'
          - '--storage.tsdb.retention.size=50GB'
          - '--web.enable-lifecycle'
          - '--web.enable-admin-api'
        ports:
        - containerPort: 9090
          name: prometheus
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-storage
          mountPath: /prometheus/
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-storage
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: getit-monitoring
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: getit-monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd