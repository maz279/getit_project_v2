# Phase 5 Enterprise Monitoring - Prometheus Configuration
# Amazon.com/Shopee.sg-Level Observability with Comprehensive Metrics
# Author: GetIt Platform Team
# Version: 5.0.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: getit-enterprise
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'getit-bangladesh'
        replica: '$(POD_NAME)'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # GetIt Application Metrics
      - job_name: 'getit-app'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - getit-enterprise
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      # Node Exporter
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes Controller Manager
      - job_name: 'kubernetes-controller-manager'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: kube-system;kube-controller-manager;http-metrics

      # Kubernetes Scheduler
      - job_name: 'kubernetes-scheduler'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: kube-system;kube-scheduler;http-metrics

      # Kubelet
      - job_name: 'kubernetes-kubelet'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # cAdvisor
      - job_name: 'kubernetes-cadvisor'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      # Istio Service Mesh
      - job_name: 'istio-mesh'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - istio-system
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-telemetry;prometheus

      # PostgreSQL Database
      - job_name: 'postgresql'
        static_configs:
          - targets: ['postgres-exporter:9187']
        metrics_path: /metrics
        scrape_interval: 30s

      # Redis Cache
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-exporter:9121']
        metrics_path: /metrics
        scrape_interval: 30s

      # Custom Business Metrics
      - job_name: 'getit-business-metrics'
        static_configs:
          - targets: ['getit-app:5000']
        metrics_path: /api/v1/metrics/business
        scrape_interval: 60s

  alerting_rules.yml: |
    groups:
      - name: getit-application
        rules:
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.05
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High error rate detected"
              description: "Error rate is {{ $value }} errors per second"

          - alert: HighResponseTime
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 0.5
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High response time detected"
              description: "95th percentile response time is {{ $value }} seconds"

          - alert: LowCacheHitRate
            expr: redis_keyspace_hits / (redis_keyspace_hits + redis_keyspace_misses) < 0.8
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "Low cache hit rate"
              description: "Cache hit rate is {{ $value | humanizePercentage }}"

      - name: infrastructure
        rules:
          - alert: HighCPUUsage
            expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage detected"
              description: "CPU usage is {{ $value }}% on {{ $labels.instance }}"

          - alert: HighMemoryUsage
            expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High memory usage detected"
              description: "Memory usage is {{ $value }}% on {{ $labels.instance }}"

          - alert: DiskSpaceLow
            expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) * 100 < 10
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Low disk space"
              description: "Disk space is {{ $value }}% on {{ $labels.instance }}"

      - name: business-metrics
        rules:
          - alert: RevenueDropAlert
            expr: increase(getit_revenue_total[1h]) < 50000
            for: 1h
            labels:
              severity: critical
            annotations:
              summary: "Significant revenue drop detected"
              description: "Hourly revenue is {{ $value }} BDT, below 50,000 BDT threshold"

          - alert: HighChurnRateAlert
            expr: getit_customer_churn_rate > 0.05
            for: 15m
            labels:
              severity: warning
            annotations:
              summary: "High customer churn rate"
              description: "Customer churn rate is {{ $value | humanizePercentage }}"

          - alert: LowConversionRateAlert
            expr: getit_conversion_rate < 0.08
            for: 30m
            labels:
              severity: warning
            annotations:
              summary: "Low conversion rate detected"
              description: "Conversion rate is {{ $value | humanizePercentage }}"